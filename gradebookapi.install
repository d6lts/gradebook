<?php
// $Id$

/**
 * @file
 * gradebookapi.install: Install schema for gradebookapi
 */

/**
 * Implementation of hook_schema().
 */

function gradebookapi_schema() {
  $schema['gradebookapi_assignment'] = array(
    'fields' => array(
      'nid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'possible'    => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'publish_date' => array(
        'description' => 'Date assignment becomes effective.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'disp-width' => '10',
      ),
      'due_date' => array(
        'description' => 'Date assignment is due.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'disp-width' => '10',
      ),
    ),
    'primary key' => array('nid'),
  );

  $schema['gradebookapi_grade'] = array(
    'fields' => array(
      'uid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'nid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'earned'      => array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'default' => 0),
      'exempt'      => array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'size' => 'tiny', 'default' => 0),
      'timestamp'   => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'note'        => array('type' => 'text', 'unsigned' => FALSE, 'not null' => FALSE, 'size' => 'big'),
    ),
    'primary key' => array('nid', 'uid'),
  );

  $schema['gradebookapi_cache'] = array(
    'fields' => array(
      'uid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'tid'         => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'earned'      => array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'default' => 0),
      'possible'    => array('type' => 'int', 'unsigned' => FALSE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('tid', 'uid'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */

function gradebookapi_install() {
  // Create tables.
  drupal_install_schema('gradebookapi');
}

/**
 * Implementation of hook_uninstall().
 */
function gradebookapi_uninstall() {

  // All gradebook UI modules should delete their taxonomy trees

  // Remove tables.

  drupal_uninstall_schema('gradebookapi');

  // Delete all variables.
  db_query("DELETE FROM {variable} WHERE name LIKE 'gradebookapi_%%'");
}

/**
 * Add Date support to gradebookapi.
 */
function gradebookapi_update_6001() {
  $ret = array();
  db_add_field($ret, 'gradebookapi_assignment', 'publish_date', array(
        'description' => 'Date assignment becomes effective.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'disp-width' => '10',
        ));
  db_add_field($ret, 'gradebookapi_assignment', 'due_date', array(
        'description' => 'Date assignment is due.',
        'type' => 'int',
        'unsigned' => FALSE,
        'not null' => TRUE,
        'default' => 0,
        'disp-width' => '10',
        ));
  return $ret;
}
